{"version":3,"sources":["components/utils/fetchData.js","components/utils/situationTable.js","components/utils/columnsTable.js","components/TablePodructs.jsx","App.js","reportWebVitals.js","index.js"],"names":["data","a","fetch","method","body","JSON","stringify","headers","id","id_produto","situacao","row","columns","title","field","cellStyle","width","maxWidth","headerStyle","render","className","quantidade","TableProducts","useState","products","setProducts","useEffect","then","resp","json","options","paging","actionsColumnIndex","addRowPosition","editable","onRowAdd","newRow","Promise","resolve","reject","updateTable","AddProduct","onRowDelete","selectedRow","index","tableData","updatedRows","DeleteProduct","splice","setTimeout","onRowUpdate","updatedRow","oldRow","UpdateProduct","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iUAKA,WAA0BA,GAA1B,SAAAC,EAAA,sEAEQC,MAAM,kCAAmC,CAC7CC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CAAE,eAAgB,sBAL/B,4C,kEASA,WAA6BC,GAA7B,eAAAP,EAAA,6DACUQ,EAAeD,EAAfC,WADV,SAGQP,MAAM,gCAAD,OAAiCO,GAAc,CACxDN,OAAQ,SACRI,QAAS,CAAE,eAAgB,sBAL/B,4C,kEASA,WAA6BP,GAA7B,eAAAC,EAAA,6DAEUQ,EAAeT,EAAfS,WAFV,SAGQP,MAAM,gCAAD,OAAiCO,GAAc,CACxDN,OAAQ,MACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CAAE,eAAgB,sBAN/B,4C,sBChBe,SAASG,EAASC,GAC/B,OAAIA,GAAO,GAAKA,GAAO,GACd,aACEA,GAAO,IAAMA,GAAO,GACtB,SAEA,K,YCmCIC,EAzCC,CACd,CACEC,MAAO,KACPC,MAAO,aAEPC,UAAW,CACTC,MAAO,EACPC,SAAU,GAEZC,YAAa,CACXF,MAAO,GACPC,SAAU,KAGd,CACEJ,MAAO,OACPC,MAAO,QAET,CACED,MAAO,kBACPC,MAAO,aAET,CACED,MAAO,WACPC,MAAO,SAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,iBACPC,MAAO,aAGPK,OAAQ,SAACR,GAAD,OACN,qBAAKS,UAAWV,EAASC,EAAIU,YAA7B,SAA2CX,EAASC,EAAIU,iBCkC/CC,MAxEf,WAAyB,MAESC,mBAAS,IAFlB,mBAEhBC,EAFgB,KAENC,EAFM,KAWvB,OANAC,qBAAU,WACRxB,MAAM,0BACHyB,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GAAD,OAAUH,EAAYG,QAC7B,IAGD,8BACE,cAAC,IAAD,CACEE,QAAS,CACPC,QAAQ,EACRC,oBAAqB,EACrBC,eAAgB,SAElBpB,MAAM,kBACNb,KAAMwB,EACNZ,QAASA,EACTsB,SAAU,CACRC,SAAU,SAACC,GAAD,OACR,IAAIC,SAAQ,SAACC,EAASC,GACpB,IAAMC,EAAW,sBAAOhB,GAAP,CAAiBY,K,oCAElCK,CAAWL,GACXX,EAAYe,GACZF,QAIJI,YAAa,SAACC,GAAD,OACX,IAAIN,SAAQ,SAACC,EAASC,GACpB,IAAMK,EAAQD,EAAYE,UAAUrC,GAC9BsC,EAAW,YAAOtB,I,oCAExBuB,CAAcJ,GACdG,EAAYE,OAAOJ,EAAO,GAG1BK,YAAW,WACTxB,EAAYqB,GACZR,MAEC,SAGPY,YAAa,SAACC,EAAYC,GAAb,OACX,IAAIf,SAAQ,SAACC,EAASC,GAEpB,IAAMK,EAAQQ,EAAOP,UAAUrC,GAEzBsC,EAAW,YAAOtB,GACxBsB,EAAYF,GAASO,E,oCAErBE,CAAcF,GAGdF,YAAW,WACTxB,EAAYqB,GACZR,MAEC,e,OC1DFgB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS5C,OACP,cAAC,IAAM6C,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.8c525d03.chunk.js","sourcesContent":["/**\n * Salvando as informação da tabela no Back-end\n * \n */\n\nasync function AddProduct(data) {\n  // console.log('dados enviar', data);\n  await fetch('http://localhost:3001/cadastrar', {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: { 'Content-Type': 'application/json' },\n  });\n}\n\nasync function DeleteProduct(id) {\n  const { id_produto } = id;\n  // console.log('dados enviar', id_produto);\n  await fetch(`http://localhost:3001/delete/${id_produto}`, {\n    method: 'DELETE',\n    headers: { 'Content-Type': 'application/json' },\n  });\n}\n\nasync function UpdateProduct(data) {\n  // console.log('dados enviar', data);\n  const { id_produto } = data;\n  await fetch(`http://localhost:3001/update/${id_produto}`, {\n    method: 'PUT',\n    body: JSON.stringify(data),\n    headers: { 'Content-Type': 'application/json' },\n  });\n}\n\nexport { AddProduct, DeleteProduct, UpdateProduct };\n","/**\n * Essa função verifica a situação\n * do protudo baseado pela suua quantidade\n * @param {*} row\n * @returns\n */\n\nexport default function situacao(row) {\n  if (row >= 0 && row <= 20) {\n    return 'Crítico';\n  } else if (row >= 21 && row <= 50) {\n    return 'Alerta';\n  } else {\n    return 'Ok';\n  }\n}\n","/**\n * obejto columns define os cabeçalhos e proprieades\n *  da tabela MaterialTable\n */\n\nimport situacao from './situationTable';\n\nconst columns = [\n  {\n    title: 'Id',\n    field: 'id_produto',\n    // editable: false,\n    cellStyle: {\n      width: 1,\n      maxWidth: 1,\n    },\n    headerStyle: {\n      width: 20,\n      maxWidth: 20,\n    },\n  },\n  {\n    title: 'Nome',\n    field: 'nome',\n  },\n  {\n    title: 'Descrição',\n    field: 'descricao',\n  },\n  {\n    title: 'Preço',\n    field: 'preco',\n  },\n  {\n    title: 'Quantidade',\n    field: 'quantidade',\n  },\n  {\n    title: 'Situação',\n    field: 'quantidade',\n    //definimos o situação da coluna quantidade\n    //e adicionamos estilo css (cores)\n    render: (row) => (\n      <div className={situacao(row.quantidade)}>{situacao(row.quantidade)}</div>\n    ),\n  },\n];\n\nexport default columns;\n","import React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { AddProduct, DeleteProduct, UpdateProduct } from './utils/fetchData';\nimport columns from './utils/columnsTable';\n\nfunction TableProducts() {\n  //hooks controla produtos da requisação\n  const [products, setProducts] = useState([]);\n\n  //Fazendo requisção ao endpoint (back-end)\n  useEffect(() => {\n    fetch('http://localhost:3001/')\n      .then((resp) => resp.json())\n      .then((resp) => setProducts(resp));\n  }, []);\n\n  return (\n    <div>\n      <MaterialTable\n        options={{\n          paging: false,\n          actionsColumnIndex: -1,\n          addRowPosition: 'first',\n        }}\n        title='Tabela Produtos'\n        data={products}\n        columns={columns}\n        editable={{\n          onRowAdd: (newRow) =>\n            new Promise((resolve, reject) => {\n              const updateTable = [...products, newRow];\n              //Salvando dados no back\n              AddProduct(newRow);\n              setProducts(updateTable);\n              resolve();\n              // console.log('add');\n            }),\n\n          onRowDelete: (selectedRow) =>\n            new Promise((resolve, reject) => {\n              const index = selectedRow.tableData.id;\n              const updatedRows = [...products];\n              //Salvando dados no back\n              DeleteProduct(selectedRow);\n              updatedRows.splice(index, 1);\n              //setTimeout ->\n              //espera o tempo de renderização da tabela (delay)\n              setTimeout(() => {\n                setProducts(updatedRows);\n                resolve();\n                // console.log('delete', selectedRow);\n              }, 2000);\n            }),\n\n          onRowUpdate: (updatedRow, oldRow) =>\n            new Promise((resolve, reject) => {\n              //Obten o index da linha\n              const index = oldRow.tableData.id;\n              //Obtendo a linha atualizada\n              const updatedRows = [...products];\n              updatedRows[index] = updatedRow;\n              //Salvando dados no back\n              UpdateProduct(updatedRow);\n              //setTimeout ->\n              //espera o tempo de renderização da tabela (delay)\n              setTimeout(() => {\n                setProducts(updatedRows);\n                resolve();\n                // console.log('update', updatedRow);\n              }, 2000);\n            }),\n        }}\n      />\n    </div>\n  );\n}\n\nexport default TableProducts;\n","import TableProducts from './components/TablePodructs.jsx';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <TableProducts />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}